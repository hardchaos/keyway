Metadata-Version: 2.1
Name: keyway
Version: 0.1.0
Summary: A solution for persistent environment variables.
Author-email: hardchaos <hardchaos.com@gmail.com>
Project-URL: Homepage, https://github.com/hardchaos/keyway
Project-URL: Bug Tracker, https://github.com/hardchaos/keyway/issues
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.10
Description-Content-Type: text/markdown
License-File: LICENSE

# Keyway
### persistent environment variables

```
import keyway
kw = keyway.Keyway()
```

# set keys like a dictionary
```
kw["alpha"] = "an api key"
kw["bravo"] = "a setting"
kw["charlie"] = 42
```

Access keys like a dictionary
```
kw["alpha"]
#>> "an api key"
```

Delete keys like a dictionary
```
del kw["alpha"]
```

Missing keys return None
```
kw["alpha"]
#> None
```

Keys are not stored in memory
```
kw.keys()
#>> dict_keys([])
```

To retrieve a dict of all of a user's keys, use the "all" keyword. All keys are stored as text for simplicity.
```
kw[all]
#>> {'bravo': 'a variable', 'charlie': '42'}
```


To delete all of a user's keys, use the "all" keyword.
```
del kw[all]
kw[all]
#>> {}
```

* By default, keys are stored in the active environment folder
  * Never upload your virtual environment to github. 
  * Optionally set a custom path and/or database name like:
    * ```keyway = Keyway(path = "your/custom/path", db_name = "custom_name")```
  * You can also optionally set a user for the keyway instance: 
    * ```keyway = Keyway(user = "username")```
